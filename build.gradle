plugins {
    id 'java-library'
    id 'checkstyle'
    id 'groovy'
    id 'maven-publish'

    id 'org.ajoberstar.grgit' version '1.7.2'
    id 'com.github.johnrengelman.shadow' version '5.2.0'
    id 'org.unbroken-dome.test-sets' version '2.0.3'
}

group 'com.finplant.ib'
version '3.0.0'

sourceCompatibility = 1.12
targetCompatibility = 1.12

repositories {
    mavenCentral()
}

dependencies {
    implementation files('libs/TwsApi_debug.jar')

    api 'io.projectreactor:reactor-core:3.3.1.RELEASE'
    implementation 'org.slf4j:slf4j-api:1.7.29'
    implementation 'com.google.guava:guava:28.1-jre'

    testImplementation 'io.projectreactor:reactor-test:3.3.1.RELEASE'
    testImplementation 'org.spockframework:spock-core:1.3-groovy-2.5'
    testImplementation 'org.objenesis:objenesis:2.6'
    testImplementation 'net.bytebuddy:byte-buddy:1.9.0'
    testImplementation 'ch.qos.logback:logback-classic:1.2.+'
    testImplementation 'org.assertj:assertj-core:3.14.0'

    checkstyle('com.github.sevntu-checkstyle:sevntu-checks:1.34.0')
}

checkstyle {
    toolVersion = '8.27'
    configFile = new File('checkstyle.xml')
    ignoreFailures = false
    maxWarnings = 0
}

testSets {
    integrationTest {
        dirName = 'test-integration'
    }
}

shadowJar {
    archiveBaseName.set('ib-client')
}

javadoc {
    excludes = ['com/finplant/ib/impl/**']
    options.stylesheetFile = new File(projectDir, 'docs/stylesheet.css');

    options.overview = new File(projectDir, 'docs/overview.html');
    options.tags = ['apiNote:a:API Note:',
                    'implSpec:a:Implementation Requirements:',
                    'implNote:a:Implementation Note:']
    options.addBooleanOption('-allow-script-in-comments', true)
}

task packageJavadoc(type: Jar, dependsOn: 'javadoc') {
    from javadoc.destinationDir
    archiveClassifier.set('javadoc')
}

publishing {
    publications {
        shadow(MavenPublication) { publication ->
            project.shadow.component(publication)
            artifact packageJavadoc
        }
    }
    repositories {
        maven {
            def releasesRepoUrl = 'gcs://finplant-maven-repo/releases'
            def snapshotsRepoUrl = 'gcs://finplant-maven-repo/snapshots'
            url = version.endsWith('SNAPSHOT') ? snapshotsRepoUrl : releasesRepoUrl
        }
    }
}

test {
    testLogging {
        events 'passed', 'skipped', 'failed'
    }
}